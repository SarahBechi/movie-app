{"version":3,"sources":["movie.js","App.js","serviceWorker.js","index.js"],"names":["Movie","props","state","className","this","list","filter","item","name","toUpperCase","includes","search","rating","starSearch","map","i","key","src","alt","year","padEnd","Component","App","addMov","setState","img","modalChange","classModel","closeModal","changeHandler","e","target","value","changeStar","s","placeholder","onChange","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c778f20d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass Movie extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"items_list\">\r\n                {this.props.list.filter(item => item.name.toUpperCase().includes(this.props.search)\r\n                    || item.rating === this.props.starSearch)\r\n\r\n\r\n                    .map((item, i) => {\r\n                        return (\r\n\r\n\r\n                            <div key={i}>\r\n\r\n\r\n                                <img className=\"image\" src={item.src} alt={\"movie\"}></img>\r\n\r\n                                <div className=\"name\">{item.name}</div>\r\n                                <div className=\"year\">{item.year}</div>\r\n                                <div className=\"rate\">{\"\".padEnd(item.rating, '*')}</div>\r\n\r\n                            </div>)\r\n\r\n                    }\r\n\r\n\r\n                    )\r\n\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Movie;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n // .filter(item => item.name.toUpperCase().includes(this.props.search) || item.rating === this.props.starSearch)\r\n\r\n\r\n\r\n\r\n        //{this.props.list.filter(item=>item.name.toUpperCase().includes(this.props.search.toUpperCase()) || item.rating === this.props.starSearch )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**  render() {\r\nreturn (<div className=\"items_list\">\r\n\r\n{this.props.list.filter(item => item.name.includes(this.props.search) || item.rating === this.props.starSearch)\r\n\r\n        .map((item, i) =>   <div key={i}>\r\n\r\n            <img className=\"image\" src={item.src} alt={\"movie\"}></img>\r\n            <div className=\"name\">{item.name}</div>\r\n            <div className=\"year\">{item.year}</div>\r\n            <div className=\"rate\">{\"\".padEnd(item.rating, '*')}</div>\r\n\r\n        </div>)}\r\n</div>);\r\n\r\n\r\n\r\n\r\n}\r\n}\r\n*/","import React, { Component } from 'react';\nimport Movie from './movie';\nimport './App.css';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\n        {\n          src: \"https://trailers.apple.com/trailers/disney/mulan/images/poster_2x.jpg\",\n          name: \"Mulan\",\n          year: \"2020\", \"rating\": 2\n        },\n\n\n        {\n          src: \"https://resizing.flixster.com/WxaxY9pem8lRU6wUi9bB6Tbo268=/fit-in/278x400/v1.bTsxMzI3ODg1OTtqOzE4Mzc4OzEyMDA7NjA3Mjs5MDAw\",\n          name: \"Bad Boys For Life\", \"year\": \"2017\", \"rating\": 3\n        },\n        {\n          src: \"https://assets.mubi.com/images/notebook/post_images/19893/images-w1400.jpg?1449196747\",\n          name: \"The Assaassin\", \"year\": \"2019\", \"rating\": 3\n        }],\n\n      classModel: \"modal\",\n      search: \"\",\n      starSearch: \"0\",\n      name: \"\",\n      rating: 0,\n      img: \"\",\n      year: 0,\n\n    }\n  }\n\n\n  addMov = () => {\n    this.setState({\n      list: [...this.state.list,\n      {\n        \"src\": this.state.img,\n        \"name\": this.state.name, \"year\": this.state.year, \"rating\": this.state.rating\n      }\n      ],\n    });\n\n  }\n\n\n  modalChange = () => {\n    this.setState({\n      classModel: \"show-modal\"\n\n    })\n  }\n\n  closeModal = () => {\n    this.setState({\n      classModel: \"modal\"\n    })\n  }\n\n  changeHandler = e => {\n\n    this.setState({ search: e.target.value.toUpperCase() });\n  }\n\n  changeStar = (s) => {\n    this.setState({ starSearch: s })\n  }\n  render() {\n    return (<div className=\"App\">\n      <div className=\"SearchAndRate\">\n        <div>\n          <input className=\"SearchBar\" placeholder=\"Type movie name to search\" onChange={this.changeHandler}></input>\n          <span className=\"SearchBtn\">Search</span>\n          <span>Minimum Rating\n          <i className=\"fas fa-star\" onClick={() => { this.changeStar(1) }}></i>\n            <i className=\"fas fa-star\" onClick={() => { this.changeStar(2) }}></i>\n            <i className=\"fas fa-star\" onClick={() => { this.changeStar(3) }}></i>\n            <i className=\"fas fa-star\" onClick={() => { this.changeStar(4) }}></i>\n            <i className=\"fas fa-star\" onClick={() => { this.changeStar(5) }}></i></span>\n\n        </div>\n      </div>\n      <Movie list={this.state.list} />\n\n      <div className=\"MovieAdd\">\n        <span className=\"AddBtn trigger\" onClick={this.modalChange}>+</span>\n        <div className={this.state.classModel}>\n          <div className=\"modal-content\">\n            <span className=\"close-button\" onClick={this.closeModal}>&times;</span>\n            <span>Please enter movie information</span>\n            <span className=\"movieName\">Movie Name</span>\n            <input onChange={(e => this.setState({ name: e.target.value }))} className=\"searchByName\"></input>\n            <span className=\"movieRate\">Rating</span>\n            <input onChange={(e => this.setState({ rating: e.target.value }))} className=\"searchByRate\"></input>\n            <span className=\"MovieYear\">Year of release</span>\n            <input onChange={(e => this.setState({ year: e.target.value }))} className=\"searchByYear\"></input>\n            <span className=\"MovieSource\">Movie Source</span>\n            <input onChange={(e => this.setState({ img: e.target.value }))} className=\"searchBySource\"></input>\n            <button className=\"addMovie\" onClick={this.addMov}>+</button>\n          </div>\n        </div>\n\n\n      </div >\n\n    </div >);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}